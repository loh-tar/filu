This file is part of Filu (C) 2007, 2010, 2011 loh.tar@googlemail.com


Import files are plain text files containing lines with Tags and Data. A Data
line has a comma separated format using the semicolon as separator. Quotes ' and
double quotes " are ignored, so doesn't matter if the data are capsulated or not
in quotes. Lines beginning with an asterisk * are complete ignored.

There are two kind of Tags where both looking the same, assignment Tags and
controlling Tags. Tags are capsulated in square brackets [].

Assignment Tags declare a variable, a Key, which will filled with data, whereas
a controling Tag force an action, declare a list of variabes or capsulate a
special data block.

NOTE: Exporter.cpp generate such an import file, see doc/export-data.txt, and
      doc/Master-of-imp-files.ods could used to got one.


Controlling Tags
==================
[CompListEnd]
  Terminates a CompList and force a commit to the DB. Or in other words it
  removes a set value of CompList.

[EOF]
  End Of File. It's not intend to use it in a file, but you could. Informs the
  Importer that no more data follow.

[Header]<foo>;<bar>...
  Comma separated files have typicaly a header, here we have headers too. It
  declare a list of variables, the Header Keys, separated by a semicolon. The
  following data are ordered in the same wise as the here listed Keys. Depend on
  which Keys are set will the Importer determine what data are able to store in
  the database. All previous declared Keys by [Header] are deleted, but *only*
  these! Other Keys stay mostly valid if they will not be overwritten by a new
  Header Key.

[Ignore]foo=bar FIXME: not implemented
  Will ignore all data where Key 'foo' has value 'bar'

[Include] FIXME: not implemented
  Includes an other import file at this point.

[MakeNameNice]On
  Each other than 'On' is 'Off'.
  This overwrites the setting done in your ~/.config/Filu.conf file. When
  activated the FI names will beautified, hopefully. The behavior is controlled
  by ~/Filu/MakeNameNice.conf. Take a look there for more infos.

[Skip] FIXME: not implemented
  Follow data will ignored until [Piks] is read

[Piks] FIXME: not implemented

[Reset]
  Clears all declared Keys and controling Tags. After this Tag the Importer
  behaves like reading the very first line of the import file.

[Stop]
  Terminate the import at this point. Almost the same as [EOF] but write a
  different message.


Assignment Tags
=================
[<Foo>]bar
  This declares the variable (aka Key) 'Foo' and set the value to 'bar'. This
  mean nothing else as that you can assign each data normally listed in columns
  with a Tag. This is useful when the same value appears in each data row. But
  [Header] will overwrite them if there is the same Key listed.


Known Header Keys
===================
As mentioned above determine the Importer by the set of Keys which data can be
stored to the database. In the following you will find what Keys has to be set
to got an data insert/update.

Keys which are optional and not a must have are market behind its name with
'(optional)'.

Keys which are a must have but could substituted by an other Key are marked
with '(either or...)'.

<SymbolKey> is a must have but could be Symbol, RefSymbol or <KnownSymbolType>.

<KnownSymbolType> depend on your database entries. Typically known types are
Reuters and Yahoo.

Almost all data take also an optional 'Quality' field. It is not listed special
because of laziness. Can be given as number or its name, see Appendix A.
FIXME: There are only a few data types which can insert the quality to the DB
and the DB will care about it. Anyway have all tables of the DB already the
quality field.


Markets
=========
Market
  The (short) name of the market. We have no long names in Filu for markets.
  See Appendix B

OpenTime (optional) FIXME: not implemented
CloseTime (optional) FIXME: not implemented
Currency
  The name of the currency FI, e.g. 'US Dollar'

CurrencySymbol
  Must be a Reuters symbol, or rather is as such interpreted.


Symbol Types / Provider
=========================
SymbolType
  The name of the new symbol type, e.g. 'Yahoo', 'Reuters'

SEQ
  The sequence, how lovely the symbol type is.

IsProvider
  '1'/'0' or 'true'/'false'


FI Master Data
================
Name
  The FI name, e.g 'Apple Computer'

Type
  The FI type, e.g 'Stock', 'Curency', 'Index'

DDate (optional) FIXME: not implemented
  Delete date, of the FI

Provider
Symbol
Market (either these three Keys or <KnownSymbolType>)
  These three Keys are bind together to build the symbol dataset. Internally
  will these Keys append with a number 0..n, (e.g. Provider2) dependent on which
  number not already exist. So if you have more than one symbols in a row, you
  have to append them with a number 1..n (Provider1, Symbol1, Market1,
  Provider2, ...) to be sure that the assignments are all correct. But take care
  that you not skip a number and the first number is 0 or nothing. If you think
  its clear enough listed and you trust Importer then will he do the numbering
  for you.
  NOTE: 'Provider' is not as exactly named. It must not be a real data provider
        usable with 'agentf this ...' command. A more fitting name would be
  'SymbolType'. In such a case set 'Market' to 'NoMarket' but it should make
  more sense to use <KnownSymbolType>, see below.

RefSymbol (optional)
  Symbols listed here will only used for identify the FI. They will not
  installed.

<KnownSymbolType> (either or Provider/Symbol/Market)
  Any symbol type already known by Filu could listed. If it is *not* a provider
  symbol will it be installed. A provider symbol will only be installed when a
  market is given otherwise will it only used as RefSymbol.
  NOTE: Internally will <KnownSymbolType> replaced by SymbolX whereas X is a
        number 0..n which not already exist. That means that you could run into
  truble when you use your own numbering simultaneous for Provider/Symbol/Market
  when you declare your own after <KnownSymbolType> and chose a number which was
  already auto generated.


Symbols
=========
Adding more symbols to existing FIs.

<SymbolKey>
Provider
Symbol
Market

IDate (optional) FIXME: not implemented
  Issue date, of the symbol.

MDate (optional) FIXME: not implemented
 Maritury date, of the symbol.


Underlying
============
CompList (either or Mother)
  You can call it 'index symbol'. All <SymbolKey> listed in the following
  represent the full set of underlyings to this FI. Not listed FIs will remove
  from the underlying list. If the FI name contains a number is this number used
  to validate the list, e.g. 'DAX 30'. If there is a mismatch nothing happens,
  but an error is thrown.

Mother (either or CompList)
  Similar to CompList, but no total summary update, simply added. So use it
  with care.

<SymbolKey>
Weight


Split Data
============
<SymbolKey>
SplitDate
  The data format like: 'yyyy-mm-dd'.

SplitPre:Post (either or SplitPost:Pre or SplitRatio)
  Format must like: '1:2', it's a normal split 2-for-1.

SplitPost:Pre (either or SplitPre:Post or SplitRatio)
  Format must like: '2:1', it's a reverse split 1-for-2.

SplitRatio (either or SplitPre:Post or SplitPost:Pre)
  Format is a number, e.g. '0.5'.

SplitComment (optional)


EODBar Data
=============
Market
<SymbolKey>
Date

Open (optional)
High (optional)
Low (optional)
  If one of these is not given will it set to 'Close'.

Close
Volume (optional)
  If not given will it set to '0'.

OpenInterest (optional)
  If not given will it set to '0'.


Groups, And Content Of Groups, At PerformerF
==============================================
Creating a group, if not already exist, in the navi panel of PerformerF and add
a FI to that group.

RefSymbol
GroupPath
  Format looks like: '/ScanResults/WatchDog'.


Chart Object Data
===================
To create an import file by hand for chart objects are almost impossible. So
these infos here are only for completeness.

RefSymbol
Market
CODate
Plot
  The VIEWNAME(), see doc/indicator-file-format.txt.

Type
ArgV (optional)
  The variable argument list.

Here a full data set as example:

AAPL;NYSE;2010-01-19;Main;Line;ExtendLeft=true/nAnchorValue=199.011771653543/nWatchDog=true/nHorizontal=true/nLeftValue=199.011771653543/nLeftDate=2009-12-28/nColor=#ffffff/nRightDate=2010-02-09/nRightValue=199.011771653543/nWatchRef=CLOSE/nExtendRight=true


Broker
========
BrokerName
FeeFormula


Depot
=======
DepotId (either or DepotName/DepotOwner)

DepotName
DepotOwner (either these two or DepotId)

Trader
  The name of a trading rule file, by default located at ~/Filu/TradingRules.

CurrencySymbol
BrokerName


Depot Positions
=================
DepotId (either or DepotName/DepotOwner)

DepotName
DepotOwner (either these two or DepotId)

PDate
RefSymbol
Market
Pieces
Price
Note (optional)


Depot Order
=============
DepotId (either or DepotName/DepotOwner)

DepotName
DepotOwner (either these two or DepotId)

ODate
  Order date.

VDate
  Valid date.

RefSymbol
Market
Pieces
Limit
  Any value or 'Best'/'0'.

Type
  The order type. A number or its name, see Appendix C

Status
  The order status. A number or its name, see Appendix D

Note (optional)


Account Data
==============
DepotId (either or DepotName/DepotOwner)

DepotName
DepotOwner (either these two or DepotId)

APDate
  Posting date.

APType
  Posting type. A number or its name, see Appendix E

Text
Value


Example 1
===========
Take a look at doc/example-apple.imp

Example 2
===========
Add a symbol to an existing FI interactiv in a console.

  [lot@N110 ~/FiluSource]$ agentf imp --config Verbose=2
  [Header]RefSymbol;ISIN
  AAPL;US0378331005
  [Line:    2      39B][  1/1  ] Symbols...................Ok (Ref: AAPL) ISIN US0378331005 NoMarket
  [Line:    3      44B][  0/0  ] End Of File...............Ok
  AgentF: Done.

Ctrl-D was pressed to finish. This is not as comfortable but a possibility.

Example 3
===========
Add a new market using AgentF's 'add' command.

  [lot@N110 ~/FiluSource]$ agentf add market NYSE USD --curr "US Dollar"
  [Line:    2      56B][  1/1  ] Markets...................Ok
  AgentF: Done.


Appendix A - Quality Names
============================
Quality stored in the database could be:

Platinum, 0
  Modified by the user, don't change automatically.

Gold, 1
  As final classified data by script.

Bronze, 2
  As temporary classified data by script.

Tin, 3
  Means there was an logical error in the data detected by the database.


Appendix B - Standardized Market Names
========================================
When you add new markets to your database should you choose one of these names.
If you want to use a different name for a here listed market should you also
change the name in the existing provider scripts, e.g. Yahoo.pm.

Barcelona
Berlin
Bilbao
Brussels
Copenhagen
Dusseldorf
Eurex
Frankfurt
HKSE
Hamburg
Hanover
London
Madrid
Milan
Munich
NYSE          Yahoo can't distingues between NYSE/NASDAQ, so always NYSE
Euronext
Oslo
Euronext
Stockholm
Stuttgart
Toronto
CDNX
Valence
Vienna
Xetra


Appendix C - Order Types
==========================
Buy
Sell


Appendix D - Order Status
===========================
Advice
  A suggestion by your trading rule.

Experied
Executed
Canceled
  Canceled by your trading rule.

Unsure
  The order may executed or not. That's only the case if the limit was exactly
  touched but not exceeded (if Sell) or undershot (if Buy).

Active
  An really placed order.


Appendix E - Account Posting Types
====================================
CashIn
CashOut
FiBuy
FiSell
Fee
