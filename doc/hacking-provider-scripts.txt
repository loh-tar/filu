This file is part of Filu (C) 2007, 2010, 2011, 2012 loh.tar@googlemail.com


Hacking Provider Scripts
==========================
This chapter include some notes about how to write a provider script. Filu use
different kind of data. The provider scripts described here deliver these data.

Each provider which is usable in Filu must have a folder located below
progs/agentf/provider. The folder name *must* *exactly* fit with the name of the
provider used in the database, <filu-schema>.stype.caption.

After ./configure && sudo make install the provider will copied to the Filu
ProviderPath, which is as default /usr/local/lib/Filu/provider. If you use a
binary package of Filu then you have to copy your own provider below these
ProviderPath.

The names of the scripts subject to only one regulation: The name *must* begin
with a unique name described below. Than could follow any other valid file name
character. But it is recommend to include the same provider(folder) name into
the script name leaded by a underline, e.g. fetchBar_Yahoo.pl

This way is every time clear where the script belonged to, e.g. in case of a bug
fixed version supplied by a community download page. There is also no
restriction about the implementation of the script. If written in Perl or C or
whatever. But a interpreter language like Perl is recommend for the suddenly
need for a fix when a provider has change something.

The scripts will called with some parameters in fixed order separated by a space
character. It is behooves by the script to use all parameter or not. The data
delivered by the script will read from stdin. So the script must write to
stdout.

The data written by the script must separate by a semicolon. The first line must
be a header line, keys separate by a semicolon too. Each data set must
terminated with a newline character. No footer line.

If the script is unable to deliver any data, return no data. If the script find
only partial data, the missing data could leave out in most cases. It is also
possible that the script leave out some header keys.

An overview of all possible header keys you will found in
import-file-format.txt. But it is not sure that the data delivered by the script
go the way thru Importer.cpp. For example, data from fetchBar* will go an own
way into the database for a little better performance.


Used Terms and Notes
======================
As already described in import-file-format.txt means in the following:

RefSymbol
  Any Symbol which may useful, list as much as possible.

<KnownSymbolType>
  When listed will it be installed.

<SymbolDataSet>
  Means 'Provider, Symbol, Market'. Should be extended by a number.

Keys in brackets [] are optional.
Keys separate by a vertical bar | means 'either or'.

Market
  Because markets currently handled in Filu simplified the scripts has to ship
  standardized names. See doc/import-file-format.txt, Appendix A.

Quality
  A script should only deliver gold or bronze.
  See doc/import-file-format.txt, Appendix B.


Script Functions
==================
Name:     fetchBar*
Purpose:  EOD Bar data to a FI in a given time frame.
Input:    FromDate, ToDate, Symbol, Market
Output:   Date, Open, High, Low, Close, Volume, OpenInterest, Quality
Comment:  If only a close price is available, the missed prices must filled
          with the close price. Otherwise the database will change the quality
          to Tin.

Name:     fetchFI*
Purpose:  The master data to a FI.
Input:    SearchString
Output:   Name, Type, <SymbolDataSet>|<KnownSymbolType>[, RefSymbol]
Comment:  The SearchString could be a Symbol or a part of the name.

Name:     fetchCompList*
Purpose:  All associated underlyings to an Index with RefSymbol and Weight.
Input:    Symbol
Output:   RefSymbol, Weight[, Name, Type, <SymbolDataSet>|<KnownSymbolType>]
Comment:  Name, Type and more Symbol(s) are optional but desired.
          If Weight is not available fill it with 1, it is anyway not yet used.
